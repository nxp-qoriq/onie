From cbcfdb5063027ee4215eade8291095e7886d9781 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>
Date: Tue, 24 Apr 2018 15:53:37 +0300
Subject: [PATCH 057/448] crypto: caam - fix TLS decrypt descriptor endianness
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Code generating the TLS decrypt descriptor should check for
device endianness instead of ARM cores endianness (__LITTLE_ENDIAN).

Fixes: a7695e4dc76d ("crypto: caam/qi - add support for TLS 1.0 record")
Signed-off-by: Horia GeantÄƒ <horia.geanta@nxp.com>
---
 drivers/crypto/caam/caamalg_desc.c |   80 ++++++++++++++++++------------------
 1 files changed, 40 insertions(+), 40 deletions(-)

diff --git a/drivers/crypto/caam/caamalg_desc.c b/drivers/crypto/caam/caamalg_desc.c
index 86cf6b3..1ec1925 100644
--- a/drivers/crypto/caam/caamalg_desc.c
+++ b/drivers/crypto/caam/caamalg_desc.c
@@ -891,10 +891,10 @@ void cnstr_shdsc_tls_decap(u32 * const desc, struct alginfo *cdata,
 	/* VSOL = payloadlen + icvlen + padlen */
 	append_math_add(desc, VARSEQOUTLEN, ZERO, REG3, 4);
 
-#ifdef __LITTLE_ENDIAN
-	append_moveb(desc, MOVE_WAITCOMP |
-		     MOVE_SRC_MATH0 | MOVE_DEST_MATH0 | 8);
-#endif
+	if (caam_little_end)
+		append_moveb(desc, MOVE_WAITCOMP |
+			     MOVE_SRC_MATH0 | MOVE_DEST_MATH0 | 8);
+
 	/* update Len field */
 	append_math_sub(desc, REG0, REG0, REG2, 8);
 
@@ -944,15 +944,15 @@ void cnstr_shdsc_tls_decap(u32 * const desc, struct alginfo *cdata,
 		 * SEQ OUT PTR command, Output Pointer (2 words) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
-			    MOVE_DEST_MATH0 | (55 * 4 << MOVE_OFFSET_SHIFT) |
-			    20);
-#else
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
-			    MOVE_DEST_MATH0 | (54 * 4 << MOVE_OFFSET_SHIFT) |
-			    20);
-#endif
+		if (caam_little_end)
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
+				    MOVE_DEST_MATH0 |
+				    (55 * 4 << MOVE_OFFSET_SHIFT) | 20);
+		else
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
+				    MOVE_DEST_MATH0 |
+				    (54 * 4 << MOVE_OFFSET_SHIFT) | 20);
+
 		/* Transform SEQ OUT PTR command in SEQ IN PTR command */
 		append_math_and_imm_u32(desc, REG0, REG0, IMM,
 					~(CMD_SEQ_IN_PTR ^ CMD_SEQ_OUT_PTR));
@@ -963,15 +963,15 @@ void cnstr_shdsc_tls_decap(u32 * const desc, struct alginfo *cdata,
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
-			    MOVE_DEST_DESCBUF | (55 * 4 << MOVE_OFFSET_SHIFT) |
-			    24);
-#else
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
-			    MOVE_DEST_DESCBUF | (54 * 4 << MOVE_OFFSET_SHIFT) |
-			    24);
-#endif
+		if (caam_little_end)
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
+				    MOVE_DEST_DESCBUF |
+				    (55 * 4 << MOVE_OFFSET_SHIFT) | 24);
+		else
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
+				    MOVE_DEST_DESCBUF |
+				    (54 * 4 << MOVE_OFFSET_SHIFT) | 24);
+
 		/*
 		 * Read the new SEQ IN PTR command, Input Pointer, Input Length
 		 * and then jump back to the next command from the
@@ -983,15 +983,15 @@ void cnstr_shdsc_tls_decap(u32 * const desc, struct alginfo *cdata,
 		 * Move the SEQ OUT PTR command, Output Pointer (1 word) and
 		 * Output Length into math registers.
 		 */
-#ifdef __LITTLE_ENDIAN
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
-			    MOVE_DEST_MATH0 | (54 * 4 << MOVE_OFFSET_SHIFT) |
-			    12);
-#else
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
-			    MOVE_DEST_MATH0 | (53 * 4 << MOVE_OFFSET_SHIFT) |
-			    12);
-#endif
+		if (caam_little_end)
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
+				    MOVE_DEST_MATH0 |
+				    (54 * 4 << MOVE_OFFSET_SHIFT) | 12);
+		else
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_DESCBUF |
+				    MOVE_DEST_MATH0 |
+				    (53 * 4 << MOVE_OFFSET_SHIFT) | 12);
+
 		/* Transform SEQ OUT PTR command in SEQ IN PTR command */
 		append_math_and_imm_u64(desc, REG0, REG0, IMM,
 					~(((u64)(CMD_SEQ_IN_PTR ^
@@ -1003,15 +1003,15 @@ void cnstr_shdsc_tls_decap(u32 * const desc, struct alginfo *cdata,
 				    (4 << LDST_OFFSET_SHIFT));
 		append_jump(desc, JUMP_TEST_ALL | JUMP_COND_CALM | 1);
 		/* Move the updated fields back to the Job Descriptor */
-#ifdef __LITTLE_ENDIAN
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
-			    MOVE_DEST_DESCBUF | (54 * 4 << MOVE_OFFSET_SHIFT) |
-			    16);
-#else
-		append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
-			    MOVE_DEST_DESCBUF | (53 * 4 << MOVE_OFFSET_SHIFT) |
-			    16);
-#endif
+		if (caam_little_end)
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
+				    MOVE_DEST_DESCBUF |
+				    (54 * 4 << MOVE_OFFSET_SHIFT) | 16);
+		else
+			append_move(desc, MOVE_WAITCOMP | MOVE_SRC_MATH0 |
+				    MOVE_DEST_DESCBUF |
+				    (53 * 4 << MOVE_OFFSET_SHIFT) | 16);
+
 		/*
 		 * Read the new SEQ IN PTR command, Input Pointer, Input Length
 		 * and then jump back to the next command from the
-- 
1.7.1

