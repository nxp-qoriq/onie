From 5972f4ef475d7aedb970c058e84962dc557ab26b Mon Sep 17 00:00:00 2001
From: Yangbo Lu <yangbo.lu@nxp.com>
Date: Tue, 17 Apr 2018 16:20:39 +0800
Subject: [PATCH 232/448] staging: fsl-dpaa2: rtc: fix the path of mc.h for including

The mc.h was moved to include/linux/fsl/, and the structure mc_command
was renamed to fsl_mc_command. This patch is to update dpaa2 rtc
driver accordingly.

Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
---
 drivers/staging/fsl-dpaa2/rtc/dprtc.c |   47 +++++++++++++++++----------------
 drivers/staging/fsl-dpaa2/rtc/rtc.c   |    2 +-
 2 files changed, 25 insertions(+), 24 deletions(-)

diff --git a/drivers/staging/fsl-dpaa2/rtc/dprtc.c b/drivers/staging/fsl-dpaa2/rtc/dprtc.c
index ce5135c..a787e64 100644
--- a/drivers/staging/fsl-dpaa2/rtc/dprtc.c
+++ b/drivers/staging/fsl-dpaa2/rtc/dprtc.c
@@ -29,7 +29,8 @@
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
-#include "../../fsl-mc/include/mc.h"
+#include <linux/fsl/mc.h>
+
 #include "dprtc.h"
 #include "dprtc-cmd.h"
 
@@ -56,7 +57,7 @@ int dprtc_open(struct fsl_mc_io *mc_io,
 	       uint16_t *token)
 {
 	struct dprtc_cmd_open *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -92,7 +93,7 @@ int dprtc_close(struct fsl_mc_io *mc_io,
 		uint32_t cmd_flags,
 		uint16_t token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_CLOSE, cmd_flags,
@@ -127,7 +128,7 @@ int dprtc_create(struct fsl_mc_io *mc_io,
 		 const struct dprtc_cfg *cfg,
 		 uint32_t *obj_id)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	(void)(cfg); /* unused */
@@ -169,7 +170,7 @@ int dprtc_destroy(struct fsl_mc_io *mc_io,
 		  uint32_t object_id)
 {
 	struct dprtc_cmd_destroy *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_DESTROY,
@@ -186,7 +187,7 @@ int dprtc_enable(struct fsl_mc_io *mc_io,
 		 uint32_t cmd_flags,
 		 uint16_t token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_ENABLE, cmd_flags,
@@ -200,7 +201,7 @@ int dprtc_disable(struct fsl_mc_io *mc_io,
 		  uint32_t cmd_flags,
 		  uint16_t token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_DISABLE,
@@ -217,7 +218,7 @@ int dprtc_is_enabled(struct fsl_mc_io *mc_io,
 		     int *en)
 {
 	struct dprtc_rsp_is_enabled *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -240,7 +241,7 @@ int dprtc_reset(struct fsl_mc_io *mc_io,
 		uint32_t cmd_flags,
 		uint16_t token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_RESET,
@@ -273,7 +274,7 @@ int dprtc_set_irq_enable(struct fsl_mc_io *mc_io,
 			 uint8_t en)
 {
 	struct dprtc_cmd_set_irq_enable *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_IRQ_ENABLE,
@@ -305,7 +306,7 @@ int dprtc_get_irq_enable(struct fsl_mc_io *mc_io,
 {
 	struct dprtc_rsp_get_irq_enable *rsp_params;
 	struct dprtc_cmd_get_irq *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -350,7 +351,7 @@ int dprtc_set_irq_mask(struct fsl_mc_io *mc_io,
 		       uint32_t mask)
 {
 	struct dprtc_cmd_set_irq_mask *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_IRQ_MASK,
@@ -385,7 +386,7 @@ int dprtc_get_irq_mask(struct fsl_mc_io *mc_io,
 {
 	struct dprtc_rsp_get_irq_mask *rsp_params;
 	struct dprtc_cmd_get_irq *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -428,7 +429,7 @@ int dprtc_get_irq_status(struct fsl_mc_io *mc_io,
 {
 	struct dprtc_cmd_get_irq_status *cmd_params;
 	struct dprtc_rsp_get_irq_status *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -471,7 +472,7 @@ int dprtc_clear_irq_status(struct fsl_mc_io *mc_io,
 			   uint32_t status)
 {
 	struct dprtc_cmd_clear_irq_status *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_CLEAR_IRQ_STATUS,
@@ -501,7 +502,7 @@ int dprtc_get_attributes(struct fsl_mc_io *mc_io,
 			 struct dprtc_attr *attr)
 {
 	struct dprtc_rsp_get_attributes *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -538,7 +539,7 @@ int dprtc_set_clock_offset(struct fsl_mc_io *mc_io,
 			   int64_t offset)
 {
 	struct dprtc_cmd_set_clock_offset *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_CLOCK_OFFSET,
@@ -567,7 +568,7 @@ int dprtc_set_freq_compensation(struct fsl_mc_io *mc_io,
 				uint32_t freq_compensation)
 {
 	struct dprtc_get_freq_compensation *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_FREQ_COMPENSATION,
@@ -596,7 +597,7 @@ int dprtc_get_freq_compensation(struct fsl_mc_io *mc_io,
 				uint32_t *freq_compensation)
 {
 	struct dprtc_get_freq_compensation *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -632,7 +633,7 @@ int dprtc_get_time(struct fsl_mc_io *mc_io,
 		   uint64_t *time)
 {
 	struct dprtc_time *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	/* prepare command */
@@ -668,7 +669,7 @@ int dprtc_set_time(struct fsl_mc_io *mc_io,
 		   uint64_t time)
 {
 	struct dprtc_time *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_TIME,
@@ -698,7 +699,7 @@ int dprtc_set_alarm(struct fsl_mc_io *mc_io,
 		    uint16_t token, uint64_t time)
 {
 	struct dprtc_time *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_SET_ALARM,
@@ -726,7 +727,7 @@ int dprtc_get_api_version(struct fsl_mc_io *mc_io,
 			  uint16_t *minor_ver)
 {
 	struct dprtc_rsp_get_api_version *rsp_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	int err;
 
 	cmd.header = mc_encode_cmd_header(DPRTC_CMDID_GET_API_VERSION,
diff --git a/drivers/staging/fsl-dpaa2/rtc/rtc.c b/drivers/staging/fsl-dpaa2/rtc/rtc.c
index 1fbc0a8..ab7f5c3 100644
--- a/drivers/staging/fsl-dpaa2/rtc/rtc.c
+++ b/drivers/staging/fsl-dpaa2/rtc/rtc.c
@@ -33,7 +33,7 @@
 #include <linux/module.h>
 #include <linux/ptp_clock_kernel.h>
 
-#include "../../fsl-mc/include/mc.h"
+#include <linux/fsl/mc.h>
 
 #include "dprtc.h"
 #include "dprtc-cmd.h"
-- 
1.7.1

