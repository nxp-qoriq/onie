From ec6ae08af891c52b0541e28a5bc960f0898f1849 Mon Sep 17 00:00:00 2001
From: Bin Meng <bmeng.cn@gmail.com>
Date: Wed, 19 Jul 2017 21:51:18 +0800
Subject: [PATCH 048/211] usb: hub: Call usb_update_hub_device() after hub descriptor is fetched

After fetching hub descriptor, we need to call USB uclass operation
update_hub_device() to notify HCD to do some preparation work.

Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
Reviewed-by: Simon Glass <sjg@chromium.org>
---
 common/usb_hub.c |   11 +++++++++++
 1 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/common/usb_hub.c b/common/usb_hub.c
index bbb1155..70bc6e2 100644
--- a/common/usb_hub.c
+++ b/common/usb_hub.c
@@ -789,6 +789,17 @@ static int usb_hub_configure(struct usb_device *dev)
 
 #ifdef CONFIG_DM_USB
 	/*
+	 * Update USB host controller's internal representation of this hub
+	 * after the hub descriptor is fetched.
+	 */
+	ret = usb_update_hub_device(dev);
+	if (ret < 0 && ret != -ENOSYS) {
+		debug("%s: failed to update hub device for HCD (%x)\n",
+		      __func__, ret);
+		return ret;
+	}
+
+	/*
 	 * A maximum of seven tiers are allowed in a USB topology, and the
 	 * root hub occupies the first tier. The last tier ends with a normal
 	 * USB device. USB 3.0 hubs use a 20-bit field called 'route string'
-- 
1.7.1

